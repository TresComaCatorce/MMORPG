<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializacion de variables
//Nombre del personaje.
name = noone;

//ID unico del cliente en el servidor.
clientId = noone;

//Estado del personaje.
state = global.playerStateIdle;

//Caja con el nombre del personaje.
self.nameBox = noone;

//Objeto que muestra los mensajes de chat ingame
self.chatMsgsIngame = noone;

//GUI Manager instance
self.guiManagerInstance = noone;

//Rangos de los frames de la animacion.
startFrm = 0;
endFrm = 1;
frm = startFrm;
//Velocidad de la animacion (No del movimiento del personaje).
rate = 0.5;

//---------------------------------------
//Direccion y velocidades del personaje.
//---------------------------------------
//Direccion.
dir = 0;

//Velocidad al caminar.
walkSpd = 2;

//Velocidad al correr.
runSpd = 5;

//Velocidad del personaje.
spd = walkSpd; 

//Profundidad del sprite del personaje
depth = -500;

//Envio la nueva posicion al servidor.
alarm[0]=10
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instanciación de objetos asociados

//Objeto que muestra los mensajes de chat ingame
self.chatMsgsIngame = instance_create( x, y, obj_Chat_Msg_Ingame );

//GUI Manager
self.guiManagerInstance = instance_create( -1000, -1000, obj_GUI_Manager );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destrucción de las instancias asociadas

//GUI Manager
if( instance_exists(self.guiManagerInstance) )
{
    instance_destroy(self.guiManagerInstance);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Envio de update position al servidor si esta quieto.
if( state == global.playerStateIdle )
{
    event_user(0);
}

alarm[0]=10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Si se esta moviendo se envia update al servidor.
if( state != global.playerStateIdle )
{
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Distancia entre el mouse y el personaje.
var dist_obj_mouse = point_distance( self.x, self.y, mouse_x, mouse_y );

//Se checkea que el personaje no este atacando.
if( self.state != global.playerStateAttacking )
{
    //Se checkea que el mouse este lejos del personaje.
    if( dist_obj_mouse &gt; 25 )
    {
        //Set to walking state and speed    
        self.state = global.playerStateWalking;
        self.spd = self.walkSpd 
        
        //Shift is pressed so alter those speeds and states
        if keyboard_check(vk_shift)
        {
            self.state = global.playerStateRunning;
            self.spd = self.runSpd;
        }
        
        //Direccion entre el mouse y el personaje.
        var direc_obj_mouse = point_direction( self.x, self.y, mouse_x, mouse_y );
        
        //Set de la direccion.
        self.direction = direc_obj_mouse;
        //Set de la velocidad.
        self.speed = self.spd;
    }
    
    //Si el mouse esta muy cerca del personaje.
    else
    {
        //Se settea la velocidad en 0 y la animacion en idle;
        self.speed = 0;
        self.state = global.playerStateIdle;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Se checkea que el personaje este quieto para atacar.
if( self.state == global.playerStateIdle )
{
    self.state = global.playerStateAttacking // Left mouse to attack
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send update package to server
//-----------------------------------------------------------------------------
// Evento custom que envia el update al servidor de los siguientes atributos:
// @header [String] Accion a informar, en este caso "POS_UPDATE".
// @posX [intS32] Nueva posicion X del personaje.
// @posY [intS32] Nueva posicion Y del personaje.
// @dir [intS32] Nueva direccion del personaje.
// @state [String] Nuevo 'state' del personaje.
//
// Se llama en:
//      -Al presionar la W para mover el personaje.
//-----------------------------------------------------------------------------

var packetName = "C_UPDATE";
var attributes = ds_list_create();

ds_list_add(    attributes,
                self.x,
                self.y,
                self.dir,
                self.state );

scr_sendPacket( packetName, attributes );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//----------------------------------//
//Caja con el nombre del personaje. //
//----------------------------------//
//Si no existe creo una instancia.
gui_name_box_draw( self );
// FIN Caja con el nombre del personaje
//-------------------------------------//




//---------------------------------------------------------------------------------------------
// Set de los frames del sprite correspondientes para los diferentes estados del personaje.
//---------------------------------------------------------------------------------------------
if( state = global.playerStateIdle )
{
    startFrm = 26;
    endFrm = 39;
    rate = 0.25;
}
else if( state = global.playerStateWalking )
{
    startFrm = 0;
    endFrm = 14;
    rate = 0.5;
}
else if( state = global.playerStateRunning )
{
    startFrm = 15;
    endFrm = 25;
    rate = 0.5;
}
else if( state = global.playerStateAttacking )
{
    startFrm = 40; 
    endFrm = 56;
    rate = 0.5;
}
// Fin set de los frames de los sprites.
//---------------------------------------------------------------------------------------------



frm += rate; // increase sprite frame

if( rate &gt; 0 ) // sort animation cycle
{
    if( frm &gt; endFrm )
    {
        frm = startFrm;
        if( self.state = global.playerStateAttacking )
        {
            state = global.playerStateIdle;
        } // at the end of an attack go back to idle
    }
    if( frm &lt; startFrm )
    {
        frm = startFrm;
    }
}


//----------------------------------------------------------------
//Direccion del sprite, puede ser un numero entero del 0 al 7.
//----------------------------------------------------------------
dir = (floor((point_direction(x,y,mouse_x,mouse_y)+22)/45));
//----------------------------------------------------------------



//----------------------------------------------------------------
//Dibuja el sprite correspondiente en el angulo correcto.
//----------------------------------------------------------------
draw_sprite( spr_Player, frm+(57*(360-dir)), x, y ); 
//----------------------------------------------------------------


//Envio la nueva posicion al servidor.
//event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Spider

instance_create( x+200, y+200, obj_spider );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//El personaje vuelve a idle.
self.state = global.playerStateIdle;

//La velocidad vuelve a 0.
self.speed = 0;

self.direction = self.dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
