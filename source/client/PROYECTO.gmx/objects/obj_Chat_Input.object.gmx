<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Chat_Input</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ui_textbox_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creación/inicialización de variables

event_inherited();

//Sprite
self.sprite = noone;

//Punto de origen
self.originPoint_x = 0;
self.originPoint_y = 0;

//Texto
self.text = "";

//Largo
self.charsLimit = 32;

//Con focus
self.focused = true;

//Tipo de mensaje a enviar ["CHAT", "GLOBAL", "WHISPER"]
self.typeMsg = global.lastTypeMsgSended;

//Boton chat tipo "Chat" asociado
self.chatChatTypeButtonObject = noone;
//Boton chat tipo "Global" asociado
self.chatGlobalTypeButtonObject = noone;
//Boton chat tipo "Whisper" asociado
self.chatWhisperTypeButtonObject = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialización del input de texto

//Se settea el sprite del text-box
self.sprite = spr_chat_text_input;

//Se crea abajo a la izquierda
self.originPoint_x = view_wview[view_current]*.01;
self.originPoint_y = (view_hview[view_current]*.99 - sprite_get_height(self.sprite) - sprite_get_height(spr_chat_button));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creación del boton "CHAT"

chatChatTypeButtonObject = instance_create( originPoint_x, originPoint_y, obj_Chat_Type_Button );

with(chatChatTypeButtonObject)
{
    sprite = spr_chat_button;
    tipo = "CHAT";
    originPoint_x = other.originPoint_x;
    originPoint_y = other.originPoint_y + sprite_get_height(sprite) + 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creación del boton "GLOBAL"

chatGlobalTypeButtonObject = instance_create( originPoint_x, originPoint_y, obj_Chat_Type_Button );

with(chatGlobalTypeButtonObject)
{
    sprite = spr_global_button;
    tipo = "GLOBAL";
    originPoint_x = other.originPoint_x + sprite_get_width(other.chatChatTypeButtonObject.sprite);
    originPoint_y = other.originPoint_y + sprite_get_height(other.sprite) + 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creación del boton "WHISPER"

chatWhisperTypeButtonObject = instance_create( originPoint_x, originPoint_y, obj_Chat_Type_Button );

with(chatWhisperTypeButtonObject)
{
    sprite = spr_whisper_button;
    tipo = "GLOBAL";
    originPoint_x = other.originPoint_x + sprite_get_width(other.chatChatTypeButtonObject.sprite) + sprite_get_width(other.chatGlobalTypeButtonObject.sprite);
    originPoint_y = other.originPoint_y + sprite_get_height(other.sprite) + 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se envia el mensaje al servidor

event_inherited();

if( is_string(text) &amp;&amp; string_length(text)&gt;0 )
{
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destrucción instancias botones "CHAT", "GLOBAL" y "WHISPER"

instance_destroy(chatChatTypeButtonObject);
instance_destroy(chatGlobalTypeButtonObject);
instance_destroy(chatWhisperTypeButtonObject);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se envía el mensaje de chat al servidor
//-----------------------------------------------------------------------------
// Evento custom que envia el mensaje de chat con los siguientes atributos:
// @header [String] Accion a informar, en este caso "C_CHAT_MSG".
// @pj_name [String] Nombre del personaje que envia el mensaje.
// @message [String] Mensaje enviado.
// @messageType [String] Tipo de mensaje ["CHAT","GLOBAL","WHISPER"]
// TODO @destino [String] El nombre del personaje destino. Solo si el mensaje es de tipo "WHISPER".
//
// Se llama en:
//      -Evento "Instance destruction".
//-----------------------------------------------------------------------------

//Se crea el buffer a enviar
var chat_packet = buffer_create( 1, buffer_grow, 1 );

//Se escribe el header (accion para identificar en el servidor) en el buffer a enviar.
//Un string indicando la accion informada.
buffer_write( chat_packet, buffer_string, "C_CHAT_MSG" );

//Se escriben los datos en el buffer a enviar.
//Nombre del personaje.
buffer_write( chat_packet, buffer_string, global.playerInstance.name );
//Texto del mensaje.
buffer_write( chat_packet, buffer_string, text );
//Tipo del mensaje.
buffer_write( chat_packet, buffer_s32, scr_getTypeMsgCode(typeMsg));

//Se escribe el socket creado en el "Network.socket" para que lo maneje y envie al servidor.
scr_networkWrite( Network.socket, chat_packet );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nothing here
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
