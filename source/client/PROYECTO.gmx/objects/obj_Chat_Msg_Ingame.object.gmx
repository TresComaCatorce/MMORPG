<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Chat_Msg_Ingame</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializacion de variables

// Personaje al que pertenece este objeto
self.playerOwner = noone;

// Queue con los mensajes a mostrar
self.queueMessages = noone;

// Flag que indica si se est√° ejecutando la alarma
self.alarmExecuting = false;

// Time interval con el que se ejecuta la alarma
self.alarmTimeInterval = 180

//M aximo de mensajes a mostrar al mismo tiempo
self.maxMessagesToShow = 2;

depth = -505;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_exists(queueMessages, ds_type_queue) )
{
    ds_queue_dequeue(queueMessages);

    if( ds_queue_empty(queueMessages) )
    {
        ds_queue_destroy(queueMessages);
    }
    else
    {
        alarm[0] = alarmTimeInterval;
    }
}

alarmExecuting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if( ds_exists(queueMessages, ds_type_queue) )
{
    if( ds_queue_size(queueMessages)&gt;maxMessagesToShow )
    {
        ds_queue_dequeue(queueMessages);
    }
}

if( !alarmExecuting )
{
    alarmExecuting = true;
    alarm[0] = alarmTimeInterval;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se dibuja el texto

if( ds_exists(queueMessages, ds_type_queue) )
{
    if( ds_queue_size(queueMessages)&gt;=1 )
    {
        draw_set_colour(c_black); //Color.
        draw_set_alpha(.2); //Opacidad.
        
        var txt1_pos_x = self.playerOwner.x-(string_width(ds_queue_tail(queueMessages))/2);//Posicion X en la que debe aparecer el mensaje.
        var txt1_pos_y = ( self.playerOwner.y - 115 ); //Posicion Y en la que debe aparecer el mensaje.
        
        //Dibujo el rectangulo de fondo.
        var rec1_pos_x1 = txt1_pos_x - 5;
        var rec1_pos_y1 = txt1_pos_y;
        var rec1_pos_x2 = txt1_pos_x + string_width(ds_queue_tail(queueMessages)) + 5;
        var rec1_pos_y2 = txt1_pos_y + string_height(ds_queue_tail(queueMessages));
        draw_rectangle( rec1_pos_x1, rec1_pos_y1, rec1_pos_x2, rec1_pos_y2, false); //Posicion, outline false.
        
        //Se dibuja el texto
        depth = -510;
        draw_text_colour( txt1_pos_x, txt1_pos_y, ds_queue_tail(queueMessages), c_white, c_white, c_white, c_white, 1 );
        depth = -505;
        
        if( ds_queue_size(queueMessages)==2 )
        {
            var txt2_pos_x = self.playerOwner.x-(string_width(ds_queue_head(queueMessages))/2);
            var txt2_pos_y = txt1_pos_y-(string_height(ds_queue_head(queueMessages)))
            
            //Dibujo el rectangulo de fondo.
            var rec2_pos_x1 = txt2_pos_x - 5;
            var rec2_pos_y1 = txt2_pos_y;
            var rec2_pos_x2 = txt2_pos_x + string_width(ds_queue_head(queueMessages)) + 5;
            var rec2_pos_y2 = txt2_pos_y + string_height(ds_queue_head(queueMessages));
            draw_rectangle( rec2_pos_x1, rec2_pos_y1, rec2_pos_x2, rec2_pos_y2, false); //Posicion, outline false.
            
            //Se dibuja el texto
            depth = -510;
            draw_text_colour( txt2_pos_x, txt2_pos_y, ds_queue_head(queueMessages), c_white, c_white, c_white, c_white, 1 ); //Posicion y texto.
            depth = -505;
        }
        
        draw_set_colour(c_white); //Color.
        draw_set_alpha(1);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
