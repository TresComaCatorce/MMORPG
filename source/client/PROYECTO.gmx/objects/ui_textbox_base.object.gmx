<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ui_focus_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializacion de variables

event_inherited();

self.text = "";
self.type = "text";
self.placeholder = "";
self.charsLimit = 256;


self.textOffsetX = 0; //Horizontal offset of text in percentage of the input sprite
self.textOffsetY = 0; //Vertical offset of text in percentage of the input sprite

self.textColor = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se dibuja el textBox

event_inherited();

var spriteHeight = sprite_get_height( self.sprite ) * self.spriteScaleY;
var spriteWidth = sprite_get_width( self.sprite ) * self.spriteScaleX;
var textToDraw = "";


if( string_length(text) &gt; 0 || focused ) {
    if( self.type == "password" ) {
        var stringLength = string_length(text);
        while( stringLength &gt; 0 ) {
            textToDraw = textToDraw + "Ã—";
            stringLength--;
        }
    }
    else {
        textToDraw = string(text);
    }
}
else {
    textToDraw = string(placeholder);
}

var textHeight = string_height( textToDraw );

var posX = originPoint_x + ( spriteWidth * self.textOffsetX );
var posY = originPoint_y + ( spriteHeight / 2 ) - ( textHeight / 2 );

draw_text_colour( posX, posY, textToDraw, self.textColor, self.textColor, self.textColor, self.textColor, 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se lee input del teclado

event_inherited();

if( focused &amp;&amp; keyboard_key != vk_enter )
{
    if(keyboard_key == vk_backspace)
    {
        text = string_copy( text, 0, string_length(text) - 1 );
    }
    else if( scr_isCharacterKey(keyboard_key) &amp;&amp; string_length(text)&lt;charsLimit )
    {
        text += keyboard_lastchar;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
